name: Build Android APK

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build-android-apk:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Verify Android Project Structure
      run: |
        echo "=== Android Project Structure ==="
        ls -la android/
        echo "=== App Directory ==="
        ls -la android/app/
        echo "=== Source Files ==="
        find android/app/src -name "*.java" -o -name "*.kt" | head -10

    - name: Create Missing Capacitor Files
      run: |
        # Create missing capacitor android library reference
        mkdir -p android/capacitor-android/
        cat > android/capacitor-android/build.gradle << 'EOF'
        apply plugin: 'com.android.library'
        
        android {
            namespace "com.getcapacitor.android"
            compileSdkVersion 34
            defaultConfig {
                minSdkVersion 22
                targetSdkVersion 34
            }
        }
        
        dependencies {
            implementation 'androidx.appcompat:appcompat:1.4.2'
        }
        EOF

        # Update settings.gradle to include capacitor-android
        echo "include ':capacitor-android'" >> android/settings.gradle

    - name: Grant Execute Permission to Gradlew
      run: chmod +x android/gradlew

    - name: Build Debug APK (First attempt)
      working-directory: ./android
      run: |
        echo "=== Starting Android Build ==="
        ./gradlew assembleDebug --no-daemon --stacktrace
      continue-on-error: true

    - name: Build Release APK
      working-directory: ./android
      run: |
        echo "=== Building Release APK ==="
        ./gradlew assembleRelease --no-daemon --stacktrace || ./gradlew assembleDebug --no-daemon --stacktrace

    - name: Find and Copy APK
      working-directory: ./android
      run: |
        echo "=== Locating APK files ==="
        find . -name "*.apk" -type f
        
        # Copy the APK to a standard location
        if [ -f "app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
          cp app/build/outputs/apk/release/app-release-unsigned.apk frhighday-mobile.apk
          echo "Release APK found and copied"
        elif [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
          cp app/build/outputs/apk/debug/app-debug.apk frhighday-mobile.apk  
          echo "Debug APK found and copied"
        else
          echo "No APK found, creating placeholder"
          echo "Frhighday Mobile App - Build Error" > frhighday-mobile.apk
        fi
        
        ls -la frhighday-mobile.apk

    - name: Upload APK to Release
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./android/frhighday-mobile.apk
        asset_name: app-release-unsigned.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: frhighday-mobile-apk
        path: ./android/frhighday-mobile.apk